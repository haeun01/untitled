{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\uC774\\uD558\\uC740\\\\OneDrive\\\\\\uBB38\\uC11C\\\\GitHub\\\\untitled\\\\src\\\\Component\\\\PopupContainer.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useRef } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport backBtn from \"./../img/BackButton.png\"; // 이미지 파일 import\nimport closeBtn from \"./../img/closeButton.png\"; // 이미지 파일 import\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Popup = styled.div`\n    position: absolute;\n    top: 100px; /* 고정된 세로 위치 */\n    left: 50%; /* 가로 중앙 */\n    transform: translateX(-50%); /* 중앙 정렬을 위해 이동 */\n    background: white;\n    padding: ${props => props.$padding ? props.$padding : \"20px\"};\n    box-shadow: 0 4px 10px rgba(0, 0, 0, 0.2);\n    z-index: 10; /* 팝업이 다른 요소 위에 나타나게 하기 위한 설정 */\n    color: black;\n    width: 1200px;\n`;\n_c = Popup;\nconst Back = styled.div`\n    position: absolute; /* 절대 위치로 설정 */\n    top: 100px; /* 상단에 붙이기 위해 0으로 설정 */\n    left: calc(50% - 620px - 100px); /* Div의 왼쪽에 딱 붙도록 위치 설정 */\n    width: 100px;\n    height: 100px;\n    background-color: white;\n    display: flex; /* 중앙 정렬을 위한 flex 설정 */\n    flex-direction: column;\n    align-items: center; /* 세로 가운데 정렬 */\n    justify-content: center; /* 가로 가운데 정렬 */\n    padding: 10px;\n    cursor: pointer;\n`;\n_c2 = Back;\nconst CloseBtn = styled.div`\n    position: absolute; /* 절대 위치로 설정 */\n    top: 100px; /* 상단에 붙이기 위해 0으로 설정 */\n    left: calc(50% + 620px); /* Div의 오른쪽에 붙도록 위치 설정 */\n    width: 100px;\n    height: 100px;\n    background-color: white;\n    display: flex; /* 중앙 정렬을 위한 flex 설정 */\n    flex-direction: column;\n    align-items: center; /* 세로 가운데 정렬 */\n    justify-content: center; /* 가로 가운데 정렬 */\n    padding: 10px;\n    cursor: pointer;\n`;\n_c3 = CloseBtn;\nexport function PopupContainer({\n  padding,\n  back,\n  children,\n  backNavigate\n}) {\n  _s();\n  const navigate = useNavigate(); // 페이지 이동을 위한 navigate 훅\n  const popupRef = useRef(null); // 팝업 요소를 참조하기 위한 ref\n\n  useEffect(() => {\n    const handleClickOutside = event => {\n      // 클릭된 요소가 팝업 내부가 아닐 경우\n      if (popupRef.current && !popupRef.current.contains(event.target)) {\n        navigate('/'); // '/' 페이지로 이동\n      }\n    };\n    document.addEventListener(\"dblclick\", handleClickOutside); // mousedown 이벤트 리스너 등록\n\n    return () => {\n      document.removeEventListener(\"dblclick\", handleClickOutside); // 언마운트 시 리스너 제거\n    };\n  }, [navigate]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [!back ? /*#__PURE__*/_jsxDEV(Back, {\n      onClick: () => backNavigate ? backNavigate() : navigate(-1),\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: backBtn,\n        style: {\n          width: \"80%\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          color: \"black\"\n        },\n        children: \"\\uB4A4\\uB85C\\uAC00\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this) : null, /*#__PURE__*/_jsxDEV(Popup, {\n      ref: popupRef,\n      $padding: padding,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(CloseBtn, {\n      onClick: () => navigate('/'),\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: closeBtn,\n        style: {\n          width: \"80%\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          color: \"black\"\n        },\n        children: \"\\uB2EB\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n_s(PopupContainer, \"m4ltaDHSeoD+AhB+G7M8GAH5IRY=\", false, function () {\n  return [useNavigate];\n});\n_c4 = PopupContainer;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"Popup\");\n$RefreshReg$(_c2, \"Back\");\n$RefreshReg$(_c3, \"CloseBtn\");\n$RefreshReg$(_c4, \"PopupContainer\");","map":{"version":3,"names":["useEffect","useRef","useNavigate","styled","backBtn","closeBtn","jsxDEV","_jsxDEV","Fragment","_Fragment","Popup","div","props","$padding","_c","Back","_c2","CloseBtn","_c3","PopupContainer","padding","back","children","backNavigate","_s","navigate","popupRef","handleClickOutside","event","current","contains","target","document","addEventListener","removeEventListener","onClick","src","style","width","fileName","_jsxFileName","lineNumber","columnNumber","color","ref","_c4","$RefreshReg$"],"sources":["C:/Users/이하은/OneDrive/문서/GitHub/untitled/src/Component/PopupContainer.js"],"sourcesContent":["import { useEffect, useRef } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport backBtn from \"./../img/BackButton.png\"; // 이미지 파일 import\r\nimport closeBtn from \"./../img/closeButton.png\"; // 이미지 파일 import\r\n\r\nconst Popup = styled.div`\r\n    position: absolute;\r\n    top: 100px; /* 고정된 세로 위치 */\r\n    left: 50%; /* 가로 중앙 */\r\n    transform: translateX(-50%); /* 중앙 정렬을 위해 이동 */\r\n    background: white;\r\n    padding: ${props => props.$padding? props.$padding: \"20px\"};\r\n    box-shadow: 0 4px 10px rgba(0, 0, 0, 0.2);\r\n    z-index: 10; /* 팝업이 다른 요소 위에 나타나게 하기 위한 설정 */\r\n    color: black;\r\n    width: 1200px;\r\n`\r\n\r\nconst Back = styled.div`\r\n    position: absolute; /* 절대 위치로 설정 */\r\n    top: 100px; /* 상단에 붙이기 위해 0으로 설정 */\r\n    left: calc(50% - 620px - 100px); /* Div의 왼쪽에 딱 붙도록 위치 설정 */\r\n    width: 100px;\r\n    height: 100px;\r\n    background-color: white;\r\n    display: flex; /* 중앙 정렬을 위한 flex 설정 */\r\n    flex-direction: column;\r\n    align-items: center; /* 세로 가운데 정렬 */\r\n    justify-content: center; /* 가로 가운데 정렬 */\r\n    padding: 10px;\r\n    cursor: pointer;\r\n`\r\n\r\nconst CloseBtn = styled.div`\r\n    position: absolute; /* 절대 위치로 설정 */\r\n    top: 100px; /* 상단에 붙이기 위해 0으로 설정 */\r\n    left: calc(50% + 620px); /* Div의 오른쪽에 붙도록 위치 설정 */\r\n    width: 100px;\r\n    height: 100px;\r\n    background-color: white;\r\n    display: flex; /* 중앙 정렬을 위한 flex 설정 */\r\n    flex-direction: column;\r\n    align-items: center; /* 세로 가운데 정렬 */\r\n    justify-content: center; /* 가로 가운데 정렬 */\r\n    padding: 10px;\r\n    cursor: pointer;\r\n`\r\n\r\nexport function PopupContainer({ padding, back, children, backNavigate}) {\r\n    const navigate = useNavigate(); // 페이지 이동을 위한 navigate 훅\r\n    const popupRef = useRef(null); // 팝업 요소를 참조하기 위한 ref\r\n\r\n    useEffect(() => {\r\n        const handleClickOutside = (event) => {\r\n            // 클릭된 요소가 팝업 내부가 아닐 경우\r\n            if (popupRef.current && !popupRef.current.contains(event.target)) {\r\n                navigate('/'); // '/' 페이지로 이동\r\n            }\r\n        };\r\n\r\n        document.addEventListener(\"dblclick\", handleClickOutside); // mousedown 이벤트 리스너 등록\r\n\r\n        return () => {\r\n            document.removeEventListener(\"dblclick\", handleClickOutside); // 언마운트 시 리스너 제거\r\n        };\r\n    }, [navigate]);\r\n\r\n    return <>\r\n        {!back? \r\n            <Back  onClick={() => backNavigate? backNavigate(): navigate(-1)}>\r\n                <img src={backBtn} style={{width:\"80%\"}}></img>\r\n                <div style={{color: \"black\"}}>뒤로가기</div>\r\n            </Back> : null\r\n        }\r\n        \r\n        <Popup ref={popupRef} $padding={padding}>\r\n            { children }\r\n        </Popup>\r\n        <CloseBtn onClick={() => navigate('/')}>\r\n            <img src={closeBtn} style={{width:\"80%\"}}></img>\r\n            <div style={{color: \"black\"}}>닫기</div>\r\n        </CloseBtn>\r\n    </>\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}