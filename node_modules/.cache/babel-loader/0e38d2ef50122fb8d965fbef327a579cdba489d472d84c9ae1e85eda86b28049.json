{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\uC774\\uD558\\uC740\\\\OneDrive\\\\\\uBB38\\uC11C\\\\GitHub\\\\untitled\\\\src\\\\Component\\\\LectureDetail.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { useParams } from \"react-router-dom\";\nimport axios from \"axios\";\n\n// 스타일 컴포넌트\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: flex-start;\n  width: 100%;\n  height: 100vh;\n  background-color: black;\n  padding: 30px; /* 패딩을 약간 확대 */\n  box-sizing: border-box;\n`;\n_c = Container;\nconst TitleBar = styled.div`\n  width: 100%;\n  max-width: 1300px; /* 최대 너비 증가 */\n  text-align: left;\n  margin-bottom: 30px; /* 하단 여백 증가 */\n`;\n_c2 = TitleBar;\nconst VideoTitle = styled.h1`\n  color: white;\n  font-weight: 300;\n  font-size: 40px; /* 글자 크기 증가 */\n  margin: 0;\n`;\n_c3 = VideoTitle;\nconst ContentArea = styled.div`\n  display: flex;\n  width: 100%;\n  max-width: 1300px; /* 최대 너비 증가 */\n  justify-content: space-between; /* 요소들을 양쪽 끝에 정렬 */\n  align-items: flex-start; /* 상단 정렬 */\n  gap: 30px; /* 요소 간의 간격 증가 */\n`;\n_c4 = ContentArea;\nconst VideoPlayer = styled.div`\n  flex: 4;\n  width: 1920px; /* 비디오 플레이어의 고정 너비 증가 */\n  height: 1080px; /* 비디오 플레이어의 고정 높이 증가 */\n  background-color: #444;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  color: white;\n  /* margin-right: 20px;  */\n`;\n_c5 = VideoPlayer;\nconst ChatSection = styled.div`\n  flex: 2;\n  width: 400px; /* 채팅 섹션의 고정 너비 증가 */\n  height: 600px; /* VideoPlayer와 동일한 높이로 설정 */\n  background-color: white;\n  padding: 20px;\n  box-sizing: border-box;\n  overflow-y: auto;\n`;\n_c6 = ChatSection;\nexport function LectureDetail() {\n  _s();\n  const {\n    id\n  } = useParams(); // URL에서 강의 ID를 가져옴\n  const [videoData, setVideoData] = useState(null); // 비디오 데이터를 저장할 상태\n  const [chatMessages, setChatMessages] = useState([]); // 채팅 메시지를 저장할 상태\n\n  useEffect(() => {\n    // 백엔드에서 비디오 데이터 가져오기\n    axios.get(`/api/lectures/${id}`).then(response => {\n      setVideoData(response.data.videoUrl); // 비디오 URL 설정\n      setChatMessages(response.data.chatMessages); // 초기 채팅 메시지 설정\n    }).catch(error => {\n      console.error(\"Error fetching lecture data:\", error);\n    });\n  }, [id]);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(TitleBar, {\n      children: /*#__PURE__*/_jsxDEV(VideoTitle, {\n        children: [\"Lecture \", id, \" \\uD83D\\uDC40\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ContentArea, {\n      children: [/*#__PURE__*/_jsxDEV(VideoPlayer, {\n        children: videoData ? /*#__PURE__*/_jsxDEV(\"video\", {\n          width: \"100%\",\n          height: \"100%\",\n          controls: true,\n          children: [/*#__PURE__*/_jsxDEV(\"source\", {\n            src: videoData,\n            type: \"video/mp4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 15\n          }, this), \"Your browser does not support the video tag.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Loading Video...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ChatSection, {\n        children: chatMessages.length > 0 ? chatMessages.map((message, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n          children: message\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 15\n        }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Loading Chat...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n}\n_s(LectureDetail, \"OT1AjvFCsKyh6JXbTVeGscHL39A=\", false, function () {\n  return [useParams];\n});\n_c7 = LectureDetail;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7;\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"TitleBar\");\n$RefreshReg$(_c3, \"VideoTitle\");\n$RefreshReg$(_c4, \"ContentArea\");\n$RefreshReg$(_c5, \"VideoPlayer\");\n$RefreshReg$(_c6, \"ChatSection\");\n$RefreshReg$(_c7, \"LectureDetail\");","map":{"version":3,"names":["React","useState","useEffect","styled","useParams","axios","jsxDEV","_jsxDEV","Container","div","_c","TitleBar","_c2","VideoTitle","h1","_c3","ContentArea","_c4","VideoPlayer","_c5","ChatSection","_c6","LectureDetail","_s","id","videoData","setVideoData","chatMessages","setChatMessages","get","then","response","data","videoUrl","catch","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","width","height","controls","src","type","length","map","message","index","_c7","$RefreshReg$"],"sources":["C:/Users/이하은/OneDrive/문서/GitHub/untitled/src/Component/LectureDetail.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { useParams } from \"react-router-dom\"; \r\nimport axios from \"axios\"; \r\n\r\n// 스타일 컴포넌트\r\nconst Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: flex-start;\r\n  width: 100%;\r\n  height: 100vh;\r\n  background-color: black;\r\n  padding: 30px; /* 패딩을 약간 확대 */\r\n  box-sizing: border-box;\r\n`;\r\n\r\nconst TitleBar = styled.div`\r\n  width: 100%;\r\n  max-width: 1300px; /* 최대 너비 증가 */\r\n  text-align: left;\r\n  margin-bottom: 30px; /* 하단 여백 증가 */\r\n`;\r\n\r\nconst VideoTitle = styled.h1`\r\n  color: white;\r\n  font-weight: 300;\r\n  font-size: 40px; /* 글자 크기 증가 */\r\n  margin: 0;\r\n`;\r\n\r\nconst ContentArea = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  max-width: 1300px; /* 최대 너비 증가 */\r\n  justify-content: space-between; /* 요소들을 양쪽 끝에 정렬 */\r\n  align-items: flex-start; /* 상단 정렬 */\r\n  gap: 30px; /* 요소 간의 간격 증가 */\r\n`;\r\n\r\nconst VideoPlayer = styled.div`\r\n  flex: 4;\r\n  width: 1920px; /* 비디오 플레이어의 고정 너비 증가 */\r\n  height: 1080px; /* 비디오 플레이어의 고정 높이 증가 */\r\n  background-color: #444;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  color: white;\r\n  /* margin-right: 20px;  */\r\n`;\r\n\r\nconst ChatSection = styled.div`\r\n  flex: 2;\r\n  width: 400px; /* 채팅 섹션의 고정 너비 증가 */\r\n  height: 600px; /* VideoPlayer와 동일한 높이로 설정 */\r\n  background-color: white;\r\n  padding: 20px;\r\n  box-sizing: border-box;\r\n  overflow-y: auto;\r\n`;\r\n\r\nexport function LectureDetail() {\r\n  const { id } = useParams(); // URL에서 강의 ID를 가져옴\r\n  const [videoData, setVideoData] = useState(null); // 비디오 데이터를 저장할 상태\r\n  const [chatMessages, setChatMessages] = useState([]); // 채팅 메시지를 저장할 상태\r\n\r\n  useEffect(() => {\r\n    // 백엔드에서 비디오 데이터 가져오기\r\n    axios.get(`/api/lectures/${id}`)\r\n      .then(response => {\r\n        setVideoData(response.data.videoUrl); // 비디오 URL 설정\r\n        setChatMessages(response.data.chatMessages); // 초기 채팅 메시지 설정\r\n      })\r\n      .catch(error => {\r\n        console.error(\"Error fetching lecture data:\", error);\r\n      });\r\n  }, [id]);\r\n\r\n  return (\r\n    <Container>\r\n      <TitleBar>\r\n        <VideoTitle>Lecture {id} 👀</VideoTitle>\r\n      </TitleBar>\r\n      <ContentArea>\r\n        <VideoPlayer>\r\n          {videoData ? (\r\n            <video width=\"100%\" height=\"100%\" controls>\r\n              <source src={videoData} type=\"video/mp4\" />\r\n              Your browser does not support the video tag.\r\n            </video>\r\n          ) : (\r\n            <p>Loading Video...</p>\r\n          )}\r\n        </VideoPlayer>\r\n        <ChatSection>\r\n          {/* 실시간 채팅 공간 */}\r\n          {chatMessages.length > 0 ? (\r\n            chatMessages.map((message, index) => (\r\n              <p key={index}>{message}</p>\r\n            ))\r\n          ) : (\r\n            <p>Loading Chat...</p>\r\n          )}\r\n        </ChatSection>\r\n      </ContentArea>\r\n    </Container>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}