{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\uC774\\uD558\\uC740\\\\OneDrive\\\\\\uBB38\\uC11C\\\\GitHub\\\\untitled\\\\src\\\\Component\\\\LectureDetail.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport styled from \"styled-components\";\nimport { useParams } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { Stomp } from \"@stomp/stompjs\";\nimport SockJS from \"sockjs-client\";\n\n// 스타일 컴포넌트 (기존 코드 유지)\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: flex-start;\n  width: 100%;\n  height: 100vh;\n  background-color: black;\n  padding: 55px;\n  box-sizing: border-box;\n`;\n_c = Container;\nconst TitleBar = styled.div`\n  width: 100%;\n  max-width: 1500px;\n  text-align: left;\n  margin-bottom: 30px;\n`;\n_c2 = TitleBar;\nconst VideoTitle = styled.h1`\n  color: white;\n  font-weight: 300;\n  font-size: 40px;\n  margin: 0;\n`;\n_c3 = VideoTitle;\nconst ContentArea = styled.div`\n  display: flex;\n  width: 100%;\n  max-width: 1500px;\n  justify-content: space-between;\n  align-items: flex-start;\n  gap: 30px;\n`;\n_c4 = ContentArea;\nconst VideoPlayer = styled.div`\n  flex: 4;\n  width: 850px;\n  height: 600px;\n  background-color: #444;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  color: white;\n`;\n_c5 = VideoPlayer;\nconst ChatSection = styled.div`\n  width: 400px;\n  height: 600px;\n  background-color: white;\n  padding: 20px;\n  box-sizing: border-box;\n  overflow-y: auto;\n`;\n_c6 = ChatSection;\nconst ChatInput = styled.input`\n  width: 100%;\n  padding: 10px;\n  margin-top: 10px;\n  box-sizing: border-box;\n`;\n_c7 = ChatInput;\nconst ChatButton = styled.button`\n  width: 100%;\n  padding: 10px;\n  margin-top: 5px;\n  background-color: #007bff;\n  color: white;\n  border: none;\n  cursor: pointer;\n`;\n_c8 = ChatButton;\nexport function LectureDetail() {\n  _s();\n  const {\n    id\n  } = useParams(); // URL에서 강의 ID 가져오기\n  const [lectureData, setLectureData] = useState(null); // 강의 데이터를 저장할 상태\n  const [chatMessages, setChatMessages] = useState([]); // 채팅 메시지를 저장할 상태\n  const [message, setMessage] = useState(\"\"); // 입력한 메시지 상태\n  const [user, setUser] = useState(null); // 현재 로그인한 사용자 정보\n  const stompClient = useRef(null);\n  useEffect(() => {\n    // 현재 로그인한 사용자 정보 가져오기\n    axios.get(\"/api/current\").then(response => {\n      setUser(response.data); // 사용자 정보 설정\n    }).catch(error => {\n      console.error(\"Error fetching user data:\", error);\n    });\n\n    // 강의 데이터 가져오기\n    axios.get(`/api/lecture/${id}`).then(response => {\n      setLectureData(response.data);\n      setChatMessages(response.data.chatMessages || []);\n    }).catch(error => {\n      console.error(\"Error fetching lecture data:\", error);\n    });\n\n    // WebSocket 연결 설정\n    const socket = new SockJS('http://localhost:8080/ws');\n    stompClient.current = Stomp.over(socket);\n\n    // 디버깅을 위한 STOMP 클라이언트 로깅 활성화\n    stompClient.current.debug = str => {\n      console.log(str);\n    };\n\n    // STOMP 연결 설정\n    stompClient.current.connect({}, () => {\n      console.log(\"Connected to WebSocket server\");\n      // 구독을 제거해도, 서버와의 연결은 유지됨\n    }, error => {\n      console.error(\"STOMP connection error:\", error);\n    });\n    return () => {\n      if (stompClient.current) {\n        stompClient.current.disconnect(() => {\n          console.log(\"Disconnected from WebSocket server\");\n        });\n      }\n    };\n  }, [id]);\n  const sendMessage = () => {\n    if (stompClient.current && stompClient.current.connected && message.trim() !== \"\" && user) {\n      const chatMessage = {\n        senderId: user.userId,\n        // 로그인된 사용자의 ID\n        content: message\n      };\n      stompClient.current.send(\"/app/chat.sendMessage\", {}, JSON.stringify(chatMessage));\n      setMessage(\"\");\n      setChatMessages(prevMessages => [...prevMessages, chatMessage]); // 메시지 바로 추가\n    } else {\n      console.error(\"STOMP client is not connected or message is empty.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(TitleBar, {\n      children: /*#__PURE__*/_jsxDEV(VideoTitle, {\n        children: lectureData ? lectureData.lectureName : 'Loading...'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ContentArea, {\n      children: [/*#__PURE__*/_jsxDEV(VideoPlayer, {\n        children: lectureData ? /*#__PURE__*/_jsxDEV(\"video\", {\n          width: \"100%\",\n          height: \"100%\",\n          controls: true,\n          poster: lectureData.image,\n          children: [/*#__PURE__*/_jsxDEV(\"source\", {\n            src: lectureData.url,\n            type: \"video/mp4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 15\n          }, this), \"Your browser does not support the video tag.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Loading Video...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ChatSection, {\n        children: [chatMessages.length > 0 ? chatMessages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [msg.senderName, \":\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 30\n          }, this), \" \", msg.content]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 15\n        }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No chat messages\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ChatInput, {\n          type: \"text\",\n          value: message,\n          onChange: e => setMessage(e.target.value),\n          placeholder: \"Type your message here...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ChatButton, {\n          onClick: sendMessage,\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 150,\n    columnNumber: 5\n  }, this);\n}\n_s(LectureDetail, \"HZBlU2h3oZYgzZ+5VKG/1JMt434=\", false, function () {\n  return [useParams];\n});\n_c9 = LectureDetail;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9;\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"TitleBar\");\n$RefreshReg$(_c3, \"VideoTitle\");\n$RefreshReg$(_c4, \"ContentArea\");\n$RefreshReg$(_c5, \"VideoPlayer\");\n$RefreshReg$(_c6, \"ChatSection\");\n$RefreshReg$(_c7, \"ChatInput\");\n$RefreshReg$(_c8, \"ChatButton\");\n$RefreshReg$(_c9, \"LectureDetail\");","map":{"version":3,"names":["React","useState","useEffect","useRef","styled","useParams","axios","Stomp","SockJS","jsxDEV","_jsxDEV","Container","div","_c","TitleBar","_c2","VideoTitle","h1","_c3","ContentArea","_c4","VideoPlayer","_c5","ChatSection","_c6","ChatInput","input","_c7","ChatButton","button","_c8","LectureDetail","_s","id","lectureData","setLectureData","chatMessages","setChatMessages","message","setMessage","user","setUser","stompClient","get","then","response","data","catch","error","console","socket","current","over","debug","str","log","connect","disconnect","sendMessage","connected","trim","chatMessage","senderId","userId","content","send","JSON","stringify","prevMessages","children","lectureName","fileName","_jsxFileName","lineNumber","columnNumber","width","height","controls","poster","image","src","url","type","length","map","msg","index","senderName","value","onChange","e","target","placeholder","onClick","_c9","$RefreshReg$"],"sources":["C:/Users/이하은/OneDrive/문서/GitHub/untitled/src/Component/LectureDetail.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { Stomp } from \"@stomp/stompjs\";\r\nimport SockJS from \"sockjs-client\";\r\n\r\n// 스타일 컴포넌트 (기존 코드 유지)\r\nconst Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: flex-start;\r\n  width: 100%;\r\n  height: 100vh;\r\n  background-color: black;\r\n  padding: 55px;\r\n  box-sizing: border-box;\r\n`;\r\n\r\nconst TitleBar = styled.div`\r\n  width: 100%;\r\n  max-width: 1500px;\r\n  text-align: left;\r\n  margin-bottom: 30px;\r\n`;\r\n\r\nconst VideoTitle = styled.h1`\r\n  color: white;\r\n  font-weight: 300;\r\n  font-size: 40px;\r\n  margin: 0;\r\n`;\r\n\r\nconst ContentArea = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  max-width: 1500px;\r\n  justify-content: space-between;\r\n  align-items: flex-start;\r\n  gap: 30px;\r\n`;\r\n\r\nconst VideoPlayer = styled.div`\r\n  flex: 4;\r\n  width: 850px;\r\n  height: 600px;\r\n  background-color: #444;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  color: white;\r\n`;\r\n\r\nconst ChatSection = styled.div`\r\n  width: 400px;\r\n  height: 600px;\r\n  background-color: white;\r\n  padding: 20px;\r\n  box-sizing: border-box;\r\n  overflow-y: auto;\r\n`;\r\n\r\nconst ChatInput = styled.input`\r\n  width: 100%;\r\n  padding: 10px;\r\n  margin-top: 10px;\r\n  box-sizing: border-box;\r\n`;\r\n\r\nconst ChatButton = styled.button`\r\n  width: 100%;\r\n  padding: 10px;\r\n  margin-top: 5px;\r\n  background-color: #007bff;\r\n  color: white;\r\n  border: none;\r\n  cursor: pointer;\r\n`;\r\n\r\nexport function LectureDetail() {\r\n  const { id } = useParams(); // URL에서 강의 ID 가져오기\r\n  const [lectureData, setLectureData] = useState(null); // 강의 데이터를 저장할 상태\r\n  const [chatMessages, setChatMessages] = useState([]); // 채팅 메시지를 저장할 상태\r\n  const [message, setMessage] = useState(\"\"); // 입력한 메시지 상태\r\n  const [user, setUser] = useState(null); // 현재 로그인한 사용자 정보\r\n  const stompClient = useRef(null);\r\n\r\n  useEffect(() => {\r\n    // 현재 로그인한 사용자 정보 가져오기\r\n    axios.get(\"/api/current\")\r\n      .then(response => {\r\n        setUser(response.data); // 사용자 정보 설정\r\n      })\r\n      .catch(error => {\r\n        console.error(\"Error fetching user data:\", error);\r\n      });\r\n\r\n    // 강의 데이터 가져오기\r\n    axios.get(`/api/lecture/${id}`)\r\n      .then(response => {\r\n        setLectureData(response.data);\r\n        setChatMessages(response.data.chatMessages || []);\r\n      })\r\n      .catch(error => {\r\n        console.error(\"Error fetching lecture data:\", error);\r\n      });\r\n\r\n    // WebSocket 연결 설정\r\n    const socket = new SockJS('http://localhost:8080/ws');\r\n    stompClient.current = Stomp.over(socket);\r\n    \r\n    // 디버깅을 위한 STOMP 클라이언트 로깅 활성화\r\n    stompClient.current.debug = (str) => {\r\n      console.log(str);\r\n    };\r\n\r\n    // STOMP 연결 설정\r\n    stompClient.current.connect({}, () => {\r\n      console.log(\"Connected to WebSocket server\");\r\n      // 구독을 제거해도, 서버와의 연결은 유지됨\r\n    }, (error) => {\r\n      console.error(\"STOMP connection error:\", error);\r\n    });\r\n\r\n    return () => {\r\n      if (stompClient.current) {\r\n        stompClient.current.disconnect(() => {\r\n          console.log(\"Disconnected from WebSocket server\");\r\n        });\r\n      }\r\n    };\r\n  }, [id]);\r\n\r\n  const sendMessage = () => {\r\n    if (stompClient.current && stompClient.current.connected && message.trim() !== \"\" && user) {\r\n      const chatMessage = {\r\n        senderId: user.userId, // 로그인된 사용자의 ID\r\n        content: message,\r\n      };\r\n      stompClient.current.send(\"/app/chat.sendMessage\", {}, JSON.stringify(chatMessage));\r\n      setMessage(\"\"); \r\n      setChatMessages(prevMessages => [...prevMessages, chatMessage]); // 메시지 바로 추가\r\n    } else {\r\n      console.error(\"STOMP client is not connected or message is empty.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <TitleBar>\r\n        <VideoTitle>{lectureData ? lectureData.lectureName : 'Loading...'}</VideoTitle>\r\n      </TitleBar>\r\n      <ContentArea>\r\n        <VideoPlayer>\r\n          {lectureData ? (\r\n            <video width=\"100%\" height=\"100%\" controls poster={lectureData.image}>\r\n              <source src={lectureData.url} type=\"video/mp4\" />\r\n              Your browser does not support the video tag.\r\n            </video>\r\n          ) : (\r\n            <p>Loading Video...</p>\r\n          )}\r\n        </VideoPlayer>\r\n        <ChatSection>\r\n          {chatMessages.length > 0 ? (\r\n            chatMessages.map((msg, index) => (\r\n              <p key={index}><strong>{msg.senderName}:</strong> {msg.content}</p>\r\n            ))\r\n          ) : (\r\n            <p>No chat messages</p>\r\n          )}\r\n          <ChatInput\r\n            type=\"text\"\r\n            value={message}\r\n            onChange={(e) => setMessage(e.target.value)}\r\n            placeholder=\"Type your message here...\"\r\n          />\r\n          <ChatButton onClick={sendMessage}>Send</ChatButton>\r\n        </ChatSection>\r\n      </ContentArea>\r\n    </Container>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}