{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\uC774\\uD558\\uC740\\\\OneDrive\\\\\\uBB38\\uC11C\\\\GitHub\\\\untitled\\\\src\\\\Component\\\\Intro.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport styled from \"styled-components\";\nimport { Navbar } from \"./Navbar\";\n\n// Container 스타일 정의\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n  background-color: black;\n  h3 {\n    font-size: 60px;\n    color: white;\n  }\n`;\n\n// 로고 애니메이션 스타일 정의\n_c = Container;\nconst Logo = styled.div`\n  width: 200px;\n  height: 200px;\n  animation: rotate_image 10s linear infinite;\n  transform-origin: 50% 50%;\n  @keyframes rotate_image {\n    100% {\n      transform: rotate(360deg);\n    }\n  }\n`;\n\n// 얇은 텍스트 스타일 정의\n_c2 = Logo;\nconst ThinText = styled.span`\n  font-weight: 100; /* 얇은(Thin) 폰트 두께 설정 */\n`;\n\n// 사각형 컨테이너 스타일 정의\n_c3 = ThinText;\nconst Rectangle = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  padding: 200px 0;\n  border-width: 1px;\n  border-color: white;\n  border-style: solid;\n  width: 90%;\n  height: 100%;\n  position: relative; /* 커서 위치를 컨테이너 안에서만 설정 */\n`;\n\n// 커서 스타일 정의\n_c4 = Rectangle;\nconst Cursor = styled.div`\n  opacity: 0;\n  position: fixed;\n  z-index: 1000;\n  transform: translate(-50%, -50%) scale(0.5);\n  width: 800px;\n  height: 800px;\n  border-radius: 50%;\n  background: radial-gradient(circle, rgba(255, 255, 255, 0.15) 0%, rgba(255, 255, 255, 0) 70%);\n  pointer-events: none;\n  transition-property: background, transform;\n  transition-duration: 0.4s;\n\n  &.on {\n    opacity: 1;\n    transform: translate(-50%, -50%) scale(1);\n  }\n`;\n_c5 = Cursor;\nexport function Intro() {\n  _s();\n  // 타이핑 효과를 위한 상태 정의\n  const [text, setText] = useState(\"\");\n  const [isDeleting, setIsDeleting] = useState(false);\n  const [loopNum, setLoopNum] = useState(0);\n  const [delta, setDelta] = useState(150); // 타이핑과 삭제의 속도를 동일하게 설정\n  const toRotate = [\"EVERYONE\", \"FRIENDS\", \"BEAUTY\", \"UNTITLED\"]; // 타이핑할 텍스트 배열\n  const period = 2000; // 완전한 텍스트가 화면에 유지되는 시간\n  const cursorRef = useRef(null); // 커서 요소 참조를 위한 useRef 사용\n  const containerRef = useRef(null); // 사각형 컨테이너 참조를 위한 useRef 사용\n\n  // 커서 상태 정의\n  const [cursorClass, setCursorClass] = useState(\"\");\n\n  // 타이핑 효과 로직\n  useEffect(() => {\n    let ticker = setTimeout(() => {\n      let i = loopNum % toRotate.length;\n      let fullText = toRotate[i];\n      let updatedText = isDeleting ? fullText.substring(0, text.length - 1) : fullText.substring(0, text.length + 1);\n      setText(updatedText);\n      if (!isDeleting && updatedText === fullText) {\n        setDelta(period); // 텍스트가 완전히 타이핑되면 대기 시간 설정\n        setIsDeleting(true);\n      } else if (isDeleting && updatedText === \"\") {\n        setIsDeleting(false);\n        setLoopNum(loopNum + 1);\n        setDelta(150); // 새로운 텍스트 타이핑 시작 시의 대기 시간\n      } else {\n        setDelta(150); // 타이핑 및 삭제 속도 일정하게 유지\n      }\n    }, delta);\n    return () => clearTimeout(ticker);\n  }, [text, isDeleting, delta, loopNum]);\n\n  // 마우스 커서 효과 로직\n  useEffect(() => {\n    const cursor = cursorRef.current;\n    const container = containerRef.current;\n    if (!cursor || !container) return; // 참조가 유효할 때만 진행\n\n    function cursorEvent(e) {\n      cursor.style.top = e.pageY + \"px\";\n      cursor.style.left = e.pageX + \"px\";\n    }\n    function handleMouseEnter() {\n      setCursorClass(\"on\");\n    }\n    function handleMouseLeave() {\n      setCursorClass(\"\");\n    }\n    container.addEventListener(\"mousemove\", cursorEvent);\n    container.addEventListener(\"mouseenter\", handleMouseEnter);\n    container.addEventListener(\"mouseleave\", handleMouseLeave);\n    return () => {\n      container.removeEventListener(\"mousemove\", cursorEvent);\n      container.removeEventListener(\"mouseenter\", handleMouseEnter);\n      container.removeEventListener(\"mouseleave\", handleMouseLeave);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(Rectangle, {\n        ref: containerRef,\n        children: [/*#__PURE__*/_jsxDEV(Logo, {\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"#\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: \"./images/logo/logo_white.png\",\n              width: \"200\",\n              height: \"200\",\n              alt: \"untitled_logo\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [/*#__PURE__*/_jsxDEV(ThinText, {\n            children: \"\\\"Hello, \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ThinText, {\n            children: \"\\\"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Cursor, {\n      className: `cursor ${cursorClass}`,\n      ref: cursorRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(Intro, \"l47qBQGPqVd+ndw3vQBy85eD0l8=\");\n_c6 = Intro;\nvar _c, _c2, _c3, _c4, _c5, _c6;\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"Logo\");\n$RefreshReg$(_c3, \"ThinText\");\n$RefreshReg$(_c4, \"Rectangle\");\n$RefreshReg$(_c5, \"Cursor\");\n$RefreshReg$(_c6, \"Intro\");","map":{"version":3,"names":["React","useState","useEffect","useRef","styled","Navbar","jsxDEV","_jsxDEV","Fragment","_Fragment","Container","div","_c","Logo","_c2","ThinText","span","_c3","Rectangle","_c4","Cursor","_c5","Intro","_s","text","setText","isDeleting","setIsDeleting","loopNum","setLoopNum","delta","setDelta","toRotate","period","cursorRef","containerRef","cursorClass","setCursorClass","ticker","setTimeout","i","length","fullText","updatedText","substring","clearTimeout","cursor","current","container","cursorEvent","e","style","top","pageY","left","pageX","handleMouseEnter","handleMouseLeave","addEventListener","removeEventListener","children","ref","href","src","width","height","alt","fileName","_jsxFileName","lineNumber","columnNumber","className","_c6","$RefreshReg$"],"sources":["C:/Users/이하은/OneDrive/문서/GitHub/untitled/src/Component/Intro.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Navbar } from \"./Navbar\";\r\n\r\n// Container 스타일 정의\r\nconst Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 100%;\r\n  background-color: black;\r\n  h3 {\r\n    font-size: 60px;\r\n    color: white;\r\n  }\r\n`;\r\n\r\n// 로고 애니메이션 스타일 정의\r\nconst Logo = styled.div`\r\n  width: 200px;\r\n  height: 200px;\r\n  animation: rotate_image 10s linear infinite;\r\n  transform-origin: 50% 50%;\r\n  @keyframes rotate_image {\r\n    100% {\r\n      transform: rotate(360deg);\r\n    }\r\n  }\r\n`;\r\n\r\n// 얇은 텍스트 스타일 정의\r\nconst ThinText = styled.span`\r\n  font-weight: 100; /* 얇은(Thin) 폰트 두께 설정 */\r\n`;\r\n\r\n// 사각형 컨테이너 스타일 정의\r\nconst Rectangle = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  padding: 200px 0;\r\n  border-width: 1px;\r\n  border-color: white;\r\n  border-style: solid;\r\n  width: 90%;\r\n  height: 100%;\r\n  position: relative; /* 커서 위치를 컨테이너 안에서만 설정 */\r\n`;\r\n\r\n// 커서 스타일 정의\r\nconst Cursor = styled.div`\r\n  opacity: 0;\r\n  position: fixed;\r\n  z-index: 1000;\r\n  transform: translate(-50%, -50%) scale(0.5);\r\n  width: 800px;\r\n  height: 800px;\r\n  border-radius: 50%;\r\n  background: radial-gradient(circle, rgba(255, 255, 255, 0.15) 0%, rgba(255, 255, 255, 0) 70%);\r\n  pointer-events: none;\r\n  transition-property: background, transform;\r\n  transition-duration: 0.4s;\r\n\r\n  &.on {\r\n    opacity: 1;\r\n    transform: translate(-50%, -50%) scale(1);\r\n  }\r\n`;\r\n\r\nexport function Intro() {\r\n  // 타이핑 효과를 위한 상태 정의\r\n  const [text, setText] = useState(\"\");\r\n  const [isDeleting, setIsDeleting] = useState(false);\r\n  const [loopNum, setLoopNum] = useState(0);\r\n  const [delta, setDelta] = useState(150); // 타이핑과 삭제의 속도를 동일하게 설정\r\n  const toRotate = [\"EVERYONE\", \"FRIENDS\", \"BEAUTY\", \"UNTITLED\"]; // 타이핑할 텍스트 배열\r\n  const period = 2000; // 완전한 텍스트가 화면에 유지되는 시간\r\n  const cursorRef = useRef(null); // 커서 요소 참조를 위한 useRef 사용\r\n  const containerRef = useRef(null); // 사각형 컨테이너 참조를 위한 useRef 사용\r\n\r\n  // 커서 상태 정의\r\n  const [cursorClass, setCursorClass] = useState(\"\");\r\n\r\n  // 타이핑 효과 로직\r\n  useEffect(() => {\r\n    let ticker = setTimeout(() => {\r\n      let i = loopNum % toRotate.length;\r\n      let fullText = toRotate[i];\r\n      let updatedText = isDeleting\r\n        ? fullText.substring(0, text.length - 1)\r\n        : fullText.substring(0, text.length + 1);\r\n\r\n      setText(updatedText);\r\n\r\n      if (!isDeleting && updatedText === fullText) {\r\n        setDelta(period); // 텍스트가 완전히 타이핑되면 대기 시간 설정\r\n        setIsDeleting(true);\r\n      } else if (isDeleting && updatedText === \"\") {\r\n        setIsDeleting(false);\r\n        setLoopNum(loopNum + 1);\r\n        setDelta(150); // 새로운 텍스트 타이핑 시작 시의 대기 시간\r\n      } else {\r\n        setDelta(150); // 타이핑 및 삭제 속도 일정하게 유지\r\n      }\r\n    }, delta);\r\n\r\n    return () => clearTimeout(ticker);\r\n  }, [text, isDeleting, delta, loopNum]);\r\n\r\n  // 마우스 커서 효과 로직\r\n  useEffect(() => {\r\n    const cursor = cursorRef.current;\r\n    const container = containerRef.current;\r\n\r\n    if (!cursor || !container) return; // 참조가 유효할 때만 진행\r\n\r\n    function cursorEvent(e) {\r\n      cursor.style.top = e.pageY + \"px\";\r\n      cursor.style.left = e.pageX + \"px\";\r\n    }\r\n\r\n    function handleMouseEnter() {\r\n      setCursorClass(\"on\");\r\n    }\r\n\r\n    function handleMouseLeave() {\r\n      setCursorClass(\"\");\r\n    }\r\n\r\n    container.addEventListener(\"mousemove\", cursorEvent);\r\n    container.addEventListener(\"mouseenter\", handleMouseEnter);\r\n    container.addEventListener(\"mouseleave\", handleMouseLeave);\r\n\r\n    return () => {\r\n      container.removeEventListener(\"mousemove\", cursorEvent);\r\n      container.removeEventListener(\"mouseenter\", handleMouseEnter);\r\n      container.removeEventListener(\"mouseleave\", handleMouseLeave);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Container>\r\n        <Rectangle ref={containerRef}>\r\n          <Logo>\r\n            <a href=\"#\">\r\n              <img\r\n                src=\"./images/logo/logo_white.png\"\r\n                width=\"200\"\r\n                height=\"200\"\r\n                alt=\"untitled_logo\"\r\n              />\r\n            </a>\r\n          </Logo>\r\n          <h3>\r\n            <ThinText>\"Hello, </ThinText>\r\n            <span>{text}</span>\r\n            <ThinText>\"</ThinText>\r\n          </h3>\r\n        </Rectangle>\r\n      </Container>\r\n      <Cursor className={`cursor ${cursorClass}`} ref={cursorRef} />\r\n    </>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}