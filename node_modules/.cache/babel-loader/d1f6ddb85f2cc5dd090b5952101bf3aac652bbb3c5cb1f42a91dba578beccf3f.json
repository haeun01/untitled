{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\uC774\\uD558\\uC740\\\\OneDrive\\\\\\uBB38\\uC11C\\\\GitHub\\\\untitled\\\\src\\\\Component\\\\Intro.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { Navbar } from \"./Navbar\";\n\n// Container 스타일 정의\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n  background-color: black;\n  padding-bottom: 5%;\n  h3 {\n    font-size: 60px;\n    color: white;\n  }\n`;\n\n// 로고 애니메이션 스타일 정의\n_c = Container;\nconst Logo = styled.div`\n  width: 200px;\n  height: 200px;\n  animation: rotate_image 10s linear infinite;\n  transform-origin: 50% 50%;\n  @keyframes rotate_image {\n    100% {\n      transform: rotate(360deg);\n    }\n  }\n`;\n\n// 얇은 텍스트 스타일 정의\n_c2 = Logo;\nconst ThinText = styled.span`\n  font-weight: 100; /* 얇은(Thin) 폰트 두께 설정 */\n`;\n\n// 사각형 컨테이너 스타일 정의\n_c3 = ThinText;\nconst Rectangle = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  padding: 200px 0;\n  border-width: 1px;\n  border-color: white;\n  border-style: solid;\n  width: 90%;\n  height: 100%;\n`;\n_c4 = Rectangle;\nexport function Intro() {\n  _s();\n  // 타이핑 효과를 위한 상태 정의\n  const [text, setText] = useState(\"\");\n  const [isDeleting, setIsDeleting] = useState(false);\n  const [loopNum, setLoopNum] = useState(0);\n  const [delta, setDelta] = useState(150); // 타이핑과 삭제의 속도를 동일하게 설정\n  const toRotate = [\"UNTITLED\", \"WELCOME\", \"YOUR TEXT HERE\"]; // 타이핑할 텍스트 배열\n  const period = 2000; // 완전한 텍스트가 화면에 유지되는 시간\n\n  // 타이핑 효과 로직\n  useEffect(() => {\n    let ticker = setTimeout(() => {\n      let i = loopNum % toRotate.length;\n      let fullText = toRotate[i];\n      let updatedText = isDeleting ? fullText.substring(0, text.length - 1) : fullText.substring(0, text.length + 1);\n      setText(updatedText);\n      if (!isDeleting && updatedText === fullText) {\n        setDelta(period); // 텍스트가 완전히 타이핑되면 대기 시간 설정\n        setIsDeleting(true);\n      } else if (isDeleting && updatedText === \"\") {\n        setIsDeleting(false);\n        setLoopNum(loopNum + 1);\n        setDelta(150); // 새로운 텍스트 타이핑 시작 시의 대기 시간\n      } else {\n        setDelta(150); // 타이핑 및 삭제 속도 일정하게 유지\n      }\n    }, delta);\n    return () => clearTimeout(ticker);\n  }, [text, isDeleting, delta, loopNum]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(Rectangle, {\n        children: [/*#__PURE__*/_jsxDEV(Logo, {\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"#\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: \"./images/logo/logo_white.png\",\n              width: \"200\",\n              height: \"200\",\n              alt: \"untitled_logo\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [/*#__PURE__*/_jsxDEV(ThinText, {\n            children: \"\\\"Hello, \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ThinText, {\n            children: \"\\\"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(Intro, \"d6fkvpdpuu8d0V8GpP5dhf49Xo0=\");\n_c5 = Intro;\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"Logo\");\n$RefreshReg$(_c3, \"ThinText\");\n$RefreshReg$(_c4, \"Rectangle\");\n$RefreshReg$(_c5, \"Intro\");","map":{"version":3,"names":["React","useState","useEffect","styled","Navbar","jsxDEV","_jsxDEV","Fragment","_Fragment","Container","div","_c","Logo","_c2","ThinText","span","_c3","Rectangle","_c4","Intro","_s","text","setText","isDeleting","setIsDeleting","loopNum","setLoopNum","delta","setDelta","toRotate","period","ticker","setTimeout","i","length","fullText","updatedText","substring","clearTimeout","children","fileName","_jsxFileName","lineNumber","columnNumber","href","src","width","height","alt","_c5","$RefreshReg$"],"sources":["C:/Users/이하은/OneDrive/문서/GitHub/untitled/src/Component/Intro.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Navbar } from \"./Navbar\";\r\n\r\n// Container 스타일 정의\r\nconst Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 100%;\r\n  background-color: black;\r\n  padding-bottom: 5%;\r\n  h3 {\r\n    font-size: 60px;\r\n    color: white;\r\n  }\r\n`;\r\n\r\n// 로고 애니메이션 스타일 정의\r\nconst Logo = styled.div`\r\n  width: 200px;\r\n  height: 200px;\r\n  animation: rotate_image 10s linear infinite;\r\n  transform-origin: 50% 50%;\r\n  @keyframes rotate_image {\r\n    100% {\r\n      transform: rotate(360deg);\r\n    }\r\n  }\r\n`;\r\n\r\n// 얇은 텍스트 스타일 정의\r\nconst ThinText = styled.span`\r\n  font-weight: 100; /* 얇은(Thin) 폰트 두께 설정 */\r\n`;\r\n\r\n// 사각형 컨테이너 스타일 정의\r\nconst Rectangle = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  padding: 200px 0;\r\n  border-width: 1px;\r\n  border-color: white;\r\n  border-style: solid;\r\n  width: 90%;\r\n  height: 100%;\r\n`;\r\n\r\nexport function Intro() {\r\n  // 타이핑 효과를 위한 상태 정의\r\n  const [text, setText] = useState(\"\");\r\n  const [isDeleting, setIsDeleting] = useState(false);\r\n  const [loopNum, setLoopNum] = useState(0);\r\n  const [delta, setDelta] = useState(150); // 타이핑과 삭제의 속도를 동일하게 설정\r\n  const toRotate = [\"UNTITLED\", \"WELCOME\", \"YOUR TEXT HERE\"]; // 타이핑할 텍스트 배열\r\n  const period = 2000; // 완전한 텍스트가 화면에 유지되는 시간\r\n\r\n  // 타이핑 효과 로직\r\n  useEffect(() => {\r\n    let ticker = setTimeout(() => {\r\n      let i = loopNum % toRotate.length;\r\n      let fullText = toRotate[i];\r\n      let updatedText = isDeleting\r\n        ? fullText.substring(0, text.length - 1)\r\n        : fullText.substring(0, text.length + 1);\r\n\r\n      setText(updatedText);\r\n\r\n      if (!isDeleting && updatedText === fullText) {\r\n        setDelta(period); // 텍스트가 완전히 타이핑되면 대기 시간 설정\r\n        setIsDeleting(true);\r\n      } else if (isDeleting && updatedText === \"\") {\r\n        setIsDeleting(false);\r\n        setLoopNum(loopNum + 1);\r\n        setDelta(150); // 새로운 텍스트 타이핑 시작 시의 대기 시간\r\n      } else {\r\n        setDelta(150); // 타이핑 및 삭제 속도 일정하게 유지\r\n      }\r\n    }, delta);\r\n\r\n    return () => clearTimeout(ticker);\r\n  }, [text, isDeleting, delta, loopNum]);\r\n\r\n  return (\r\n    <>\r\n      <Navbar />\r\n      <Container>\r\n        <Rectangle>\r\n          <Logo>\r\n            <a href=\"#\">\r\n              <img\r\n                src=\"./images/logo/logo_white.png\"\r\n                width=\"200\"\r\n                height=\"200\"\r\n                alt=\"untitled_logo\"\r\n              />\r\n            </a>\r\n          </Logo>\r\n          <h3>\r\n            <ThinText>\"Hello, </ThinText>\r\n            <span>{text}</span>\r\n            <ThinText>\"</ThinText>\r\n          </h3>\r\n        </Rectangle>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}